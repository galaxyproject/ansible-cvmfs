---
- name: Include initial OS-specific tasks
  ansible.builtin.include_tasks: init_{{ ansible_os_family | lower }}.yml
  vars:
    _cvmfs_role: stratum1
    _cvmfs_upgrade: "{{ cvmfs_upgrade_server }}"

- name: Include key setup tasks
  ansible.builtin.include_tasks: keys.yml

- name: Change Apache listen port
  ansible.builtin.lineinfile:
    dest: "{{ cvmfs_apache_conf_file }}"
    line: Listen {{ cvmfs_stratum1_apache_port }}
    regexp: ^Listen\s+
    backup: true
  when: cvmfs_config_apache
  notify:
    - Reload apache

- name: Include stratumN tasks
  ansible.builtin.include_tasks: stratumN.yml

- name: Include Apache tasks
  ansible.builtin.include_tasks: apache.yml

- name: Include squid tasks
  ansible.builtin.include_tasks: squid.yml
  vars:
    _cvmfs_squid_conf_src: "{{ cvmfs_squid_conf_src | default('stratum1_squid.conf.j2') }}"
  when: cvmfs_stratum1_squid_enabled

- name: Include firewall tasks
  ansible.builtin.include_tasks: firewall.yml
  vars:
    _cvmfs_http_ports: "{{ cvmfs_http_ports | default(cvmfs_stratum1_http_ports) }}"
  when: cvmfs_manage_firewall

- name: Install GeoIP API key
  ansible.builtin.copy:
    content: |
      CVMFS_GEO_ACCOUNT_ID="{{ cvmfs_geo_account_id }}"
      CVMFS_GEO_LICENSE_KEY="{{ cvmfs_geo_license_key }}"
    mode: 0400
    dest: /etc/cvmfs/server.local
  when: cvmfs_geo_license_key is defined

- name: Bypassing GeoIP API key
  ansible.builtin.copy:
    content: |
      CVMFS_GEO_DB_FILE=NONE
    mode: 0400
    dest: /etc/cvmfs/server.local
  when: cvmfs_geo_license_key is not defined

- name: Ensure replicas are configured
  ansible.builtin.command: >-
    /usr/bin/cvmfs_server add-replica -o {{ item.owner | default('root') }}
      http://{{ item.stratum0 }}/cvmfs/{{ item.repository }}
      {{ item.key_dir | default('/etc/cvmfs/keys') }}
  args:
    creates: /etc/cvmfs/repositories.d/{{ item.repository }}
  loop: "{{ cvmfs_repositories }}"
  register: __cvmfs_add_replica_result
  notify:
    - Restart apache

# Ideally we could use item.stratum0_url_scheme directly in `cvmfs_server add-replica` above, but it appears not to
# support it, so we instead have to change it after the fact
- name: Configure replica stratum0 URLs
  ansible.builtin.lineinfile:
    path: /etc/cvmfs/repositories.d/{{ item.repository }}/server.conf
    regexp: ^CVMFS_STRATUM0=https?://[^/]+/(.*)
    line: CVMFS_STRATUM0={{ item.stratum0_url_scheme | default("http") }}://{{ item.stratum0 }}/\1
    backrefs: true
  loop: "{{ cvmfs_repositories }}"

- name: Include repository server options tasks
  ansible.builtin.include_tasks: options.yml
  vars:
    _cvmfs_repo_option_key: server

- name: Perform initial snapshot
  ansible.builtin.command: /usr/bin/cvmfs_server snapshot {{ item.item.repository }}
  loop: "{{ __cvmfs_add_replica_result.results }}"
  loop_control:
    label: "{{ item.item.repository }}"
  environment:
    X509_CERT_BUNDLE: "{{ cvmfs_x509_cert_bundle | default(ansible_env.X509_CERT_BUNDLE | default('')) }}"
  when: item is changed

- name: Create CVMFS stratum1 logrotate configuration
  ansible.builtin.copy:
    content: |
      /var/log/cvmfs/*.log {
          weekly
          missingok
          notifempty
      }
    mode: 0644
    dest: /etc/logrotate.d/cvmfs

- name: Schedule stratum1 snapshots
  ansible.builtin.cron:
    name: cvmfs_snapshot_all
    cron_file: ansible_cvmfs_stratum1_snapshot
    user: root
    job: >-
      output=$(
      {{- ("X509_CERT_BUNDLE=" ~ cvmfs_x509_cert_bundle | quote) ~ " " if cvmfs_x509_cert_bundle is defined else "" -}}
      /usr/bin/cvmfs_server snapshot -a -i 2>&1) || echo "$output"
    hour: "{{ cvmfs_stratum1_snapshot_time.hour | default(omit) }}"
    minute: "{{ cvmfs_stratum1_snapshot_time.minute | default(omit) }}"
    day: "{{ cvmfs_stratum1_snapshot_time.day | default(omit) }}"
    month: "{{ cvmfs_stratum1_snapshot_time.month | default(omit) }}"
    weekday: "{{ cvmfs_stratum1_snapshot_time.weekday | default(omit) }}"
    special_time: "{{ cvmfs_stratum1_snapshot_time.special_time | default(omit) }}"

- name: Schedule GeoIP database updates
  ansible.builtin.cron:
    name: cvmfs_geoip_db_update
    cron_file: ansible_cvmfs_geoip_db_update
    user: root
    job: /usr/bin/cvmfs_server update-geodb
    minute: "{{ cvmfs_geoip_db_update_minute }}"
    hour: "{{ cvmfs_geoip_db_update_hour }}"
    day: "{{ cvmfs_geoip_db_update_day }}"
  when: cvmfs_geo_license_key is defined

- name: Include garbage collection tasks
  ansible.builtin.include_tasks: gc.yml
  when: cvmfs_gc_enabled

# allow unprivileged users to restart squid
- name: Allow users to manage services
  ansible.builtin.template:
    src: 01-manage-units.rules.j2
    dest: /etc/polkit-1/rules.d/01-manage-units.rules
    mode: 0644
  when: cvmfs_manage_units_users is defined or cvmfs_manage_units_group is defined
